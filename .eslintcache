[{"/Users/charleszhang/Documents/cxczau/portfolio/src/index.js":"1","/Users/charleszhang/Documents/cxczau/portfolio/src/App.js":"2","/Users/charleszhang/Documents/cxczau/portfolio/src/serviceWorker.js":"3","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/UrbicaMap.js":"4","/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Data.js":"5","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Home/NavBar.js":"6","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Index.js":"7","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/ReactPage.js":"8","/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Icons.js":"9","/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Colors.js":"10","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/PrintPdf.js":"11","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/CardDatabase.js":"12","/Users/charleszhang/Documents/cxczau/portfolio/src/Utilities/Numbers.js":"13","/Users/charleszhang/Documents/cxczau/portfolio/src/Utilities/Json.js":"14","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Utility/MagicUtility.js":"15","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/Constants/Text.js":"16","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/CardListSorter.js":"17","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/VideoPage.js":"18","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Home/NavBar1.js":"19","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/MatchEntryPage.js":"20","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Utility/MatchConstants.js":"21","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/RadioGroup.js":"22","/Users/charleszhang/Documents/cxczau/portfolio/src/Services/GoogleSheets.js":"23"},{"size":564,"mtime":1608897609051,"results":"24","hashOfConfig":"25"},{"size":1884,"mtime":1612076124360,"results":"26","hashOfConfig":"25"},{"size":4951,"mtime":1561307784000,"results":"27","hashOfConfig":"25"},{"size":3294,"mtime":1610012981620,"results":"28","hashOfConfig":"25"},{"size":1446,"mtime":1611316886837,"results":"29","hashOfConfig":"25"},{"size":4035,"mtime":1611131797834,"results":"30","hashOfConfig":"25"},{"size":2311,"mtime":1609668379842,"results":"31","hashOfConfig":"25"},{"size":2401,"mtime":1611318735882,"results":"32","hashOfConfig":"25"},{"size":1462,"mtime":1606953588503,"results":"33","hashOfConfig":"25"},{"size":2666,"mtime":1610980193267,"results":"34","hashOfConfig":"25"},{"size":1000,"mtime":1610020393012,"results":"35","hashOfConfig":"25"},{"size":1532,"mtime":1609223740752,"results":"36","hashOfConfig":"25"},{"size":2236,"mtime":1609847402135,"results":"37","hashOfConfig":"25"},{"size":535,"mtime":1609207155493,"results":"38","hashOfConfig":"25"},{"size":1037,"mtime":1610020322916,"results":"39","hashOfConfig":"25"},{"size":153,"mtime":1610367743129,"results":"40","hashOfConfig":"25"},{"size":2103,"mtime":1609847526510,"results":"41","hashOfConfig":"25"},{"size":1036,"mtime":1611318000480,"results":"42","hashOfConfig":"25"},{"size":2878,"mtime":1611131536360,"results":"43","hashOfConfig":"25"},{"size":3080,"mtime":1612661853309,"results":"44","hashOfConfig":"25"},{"size":725,"mtime":1612611322703,"results":"45","hashOfConfig":"25"},{"size":762,"mtime":1612656584808,"results":"46","hashOfConfig":"25"},{"size":1509,"mtime":1612746527431,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1pizgd1",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"66"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"50"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/charleszhang/Documents/cxczau/portfolio/src/index.js",[],[],"/Users/charleszhang/Documents/cxczau/portfolio/src/App.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/serviceWorker.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/UrbicaMap.js",["108","109"],"import React, { useState, useEffect } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport styled from \"styled-components\";\nimport MapGL, { Layer, Marker, Popup } from \"@urbica/react-map-gl\";\nimport Cluster from \"@urbica/react-map-gl-cluster\";\nimport { mapIcon } from \"../Constants/Icons\";\nimport { generateRandomDataSet } from \"../Utilities/Numbers\";\nimport { blue1 } from \"../Constants/Colors\";\n\nconst NUMBER_OF_DATA_POINTS = 500;\n\nconst Dialog = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  max-height: 30vh;\n  max-width: 30vh;\n  background: ${blue1};\n`;\n\nconst style = {\n  width: \"20px\",\n  height: \"20px\",\n  color: \"#fff\",\n  background: \"#1978c8\",\n  borderRadius: \"20px\",\n  textAlign: \"center\",\n};\n\nconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\n  <Marker longitude={longitude} latitude={latitude}>\n    <div style={{ ...style, background: \"#f28a25\" }}>{pointCount}</div>\n  </Marker>\n);\n\nconst UrbicaReactHookMap = (props) => {\n  const [hoverSite, setHoverSite] = useState();\n  const [mapPins, setMapPins] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const [viewport, setViewport] = useState(props.configuration);\n\n  useEffect(() => {\n    setMapPins(generateRandomDataSet(NUMBER_OF_DATA_POINTS, viewport));\n  }, []);\n\n  // console.log(props);\n\n  return (\n    <div>\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Hide\" : \"Show\"}\n      </button>\n\n      <button\n        onClick={() =>\n          setMapPins(generateRandomDataSet(NUMBER_OF_DATA_POINTS, viewport))\n        }\n      >\n        Generate new data points\n      </button>\n\n      <MapGL\n        style={{ width: \"80vw\", height: \"80vh\" }}\n        mapStyle=\"mapbox://styles/cxczau/ckjmnzi6321ze19o2to7b49im\"\n        accessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        {...viewport}\n        onViewportChange={setViewport}\n      >\n        {!!hoverSite && !!hoverSite.siteName && (\n          <Popup\n            longitude={hoverSite.longitude}\n            latitude={hoverSite.latitude}\n            closeButton={false}\n            closeOnClick={false}\n            style={{\n              color: \"black\",\n            }}\n          >\n            <Dialog>\n              <div>{hoverSite.siteName}</div>\n\n              <div>{hoverSite.lngLat}</div>\n\n              <div>Click to view full site details</div>\n            </Dialog>\n          </Popup>\n        )}\n\n        {visible && (\n          <Cluster\n            // ref={clusterRef}\n            radius={40}\n            extent={512}\n            nodeSize={64}\n            component={ClusterMarker}\n          >\n            {mapPins.length > 0 &&\n              mapPins.map((item, index) => (\n                <Marker\n                  key={item.uniqueId}\n                  longitude={item.lngLat[0]}\n                  latitude={item.lngLat[1]}\n                >\n                  <div\n                    // onClick={() => setCurrentSite(item)}\n                    onMouseEnter={() => setHoverSite(item)}\n                    onMouseLeave={() => setHoverSite(null)}\n                  >\n                    <img src={mapIcon.src} />\n                  </div>\n                </Marker>\n              ))}\n          </Cluster>\n        )}\n      </MapGL>\n    </div>\n  );\n};\n\nexport default UrbicaReactHookMap;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Data.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Home/NavBar.js",["110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],"import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, CloseButton } from \"react-bootstrap\";\nimport Icon from \"@mdi/react\";\nimport styled from \"styled-components\";\nimport {\n  useTransition,\n  useSpring,\n  useChain,\n  config,\n  a,\n  useTrail,\n} from \"react-spring\";\nimport { mdiMenu } from \"@mdi/js\";\nimport { sectionData } from \"../../Constants/Data\";\nimport { grey3, gradientColor, gradientList } from \"../../Constants/Colors\";\nimport { Trail } from \"./NavBar1\";\n\nconst Container = styled(a.div)`\n  ${(props) => (props.visible ? \"\" : \"display: none\")};\n  background: white;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 90vw;\n  height: 90vh;\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.05);\n  will-change: width, height;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 5vh 5vw;\n  z-index: 98;\n  background: linear-gradient(to top, white 20%, rgba(255, 255, 255, 0) 100%);\n`;\n\nconst Item = styled(a.div)`\n  width: 100%;\n  height: 100%;\n  color: black;\n  border-radius: 5px;\n  will-change: transform, opacity;\n`;\n\n// const AnimatedContainer = styled(a.div)`\n// position: absolute;\n//   will-change: transform, opacity;\n// `;\n\nconst TrailsMain = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsTextContainer = styled(a.div)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsText = styled(a.div)`\n  overflow: hidden;\n`;\n\nconst NavButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: calc(50vh);\n`;\n\nconst NavBar = (navBarProps) => {\n  const [users, setUsers] = useState([]);\n  const [showObject, setShowObject] = useState(false);\n\n  const springRef = useRef();\n  const { size, opacity, ...rest } = useSpring(\n    {\n      ref: springRef,\n      config: { mass: 5, tension: 2000, friction: 200 },\n      opacity: open ? 1 : 0,\n      y: open ? 0 : 200,\n      height: open ? 110 : 0,\n      from: { opacity: 0, x: 20, height: 0 },\n    }\n    \n  );\n\n  const transRef = useRef();\n  const transitions = useTransition(\n    showObject ? sectionData : [],\n    (item) => item.name,\n    {\n      ref: transRef,\n      unique: true,\n      trail: 400 / sectionData.length,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" },\n    }\n  );\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(showObject ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    showObject ? 0.1 : 0.6,\n  ]);\n\n  return (\n    <div>\n      <NavButton onClick={() => setShowObject(!showObject)}>\n        <Icon color=\"blue\" path={mdiMenu} size=\"40px\" />\n      </NavButton>\n\n      {/* <AnimatedContainer> */}\n        <Container\n          style={{ ...rest, width: size, height: size }}\n          visible={showObject}\n          onClick={() => setShowObject(!showObject)}\n        >\n          {/* {transitions.map(({ item, key, props }) => (\n          <Item key={key} style={{ ...props, background: item.css }}>\n            <span\n              onClick={() => {\n                setShowObject(false);\n                navBarProps.setCurrentSection(item.section);\n              }}\n            >\n              {item.title}\n            </span>\n          </Item>\n        ))} */}\n\n          <Trail open={showObject}>\n            {sectionData.map((item, index) => (\n              <span\n                key={index}\n                onClick={() => {\n                  setShowObject(false);\n                  navBarProps.setCurrentSection(item.section);\n                }}\n              >\n                {item.title}\n              </span>\n            ))}\n          </Trail>\n        </Container>\n      {/* </AnimatedContainer> */}\n    </div>\n  );\n};\n\nexport default NavBar;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Index.js",["126","127","128","129"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport ScryfallData from \"../../Constants/ScryfallData.json\";\nimport CardDatabase from \"./CardDatabase\";\nimport PrintPdf from \"./PrintPdf\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 80vw;\n  height: 80vh;\n`;\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 40vw;\n  height: 75vh;\n`;\n\nconst Magic = (props) => {\n  const [pdfReady, setPdfReady] = useState(false);\n  const [decklist, setDecklist] = useState(\"Your decklist will be parsed here\");\n  const [imageUris, setImageUris] = useState([]);\n  const [notFound, setNotFound] = useState(['Cards not found will be listed here']);\n\n  const parseData = () => {\n    let notFoundList = [];\n    let parsedDataImages = [];\n\n    // Break decklist into array items\n    const arrayOfLines = decklist.split(\"\\n\");\n\n    arrayOfLines.forEach((item) => {\n      const cardName = item.split(\"1 \")[1];\n\n      const foundCard =\n        ScryfallData.find((element) => element.name === cardName) || cardName;\n\n      if (foundCard?.imageUri) {\n        parsedDataImages.push(foundCard?.imageUri);\n      } else {\n        notFoundList.push(item);\n      }\n    });\n\n    setNotFound(\n      notFoundList.length > 1 ? notFoundList : [\"All items found :)\"]\n    );\n\n    if (parsedDataImages.length > 0) {\n      setPdfReady(true);\n      setImageUris(parsedDataImages);\n    }\n  };\n\n  return (\n    <Container>\n      {/* <CardDatabase /> */}\n\n      <Form>\n        <Form.Group>\n          <Form.Text className=\"text-muted\" id=\"text-area\">\n            Please paste your decklist below.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group as={FormContainer} controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Control\n            as=\"textarea\"\n            rows={15}\n            onChange={({ target }) => {\n              setDecklist(target.value);\n            }}\n          />\n\n          <Button onClick={parseData}>Submit</Button>\n\n          <Form.Control as=\"textarea\" readOnly value={notFound} rows={15} />\n\n          <PrintPdf imageUris={imageUris} ready={pdfReady} />\n        </Form.Group>\n      </Form>\n\n      \n    </Container>\n  );\n};\n\nexport default Magic;\n",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/ReactPage.js",["130","131"],"import React, { useEffect, useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport styled from \"styled-components\";\n\nconst BaseCard = styled(animated.div)`\n  position: absolute;\n  border-radius: 5px;\n\n  background-position: center center;\n  background-repeat: no-repeat;\n  will-change: transform;\n`;\n\nconst BackImage = styled(BaseCard)`\n  width: 60vw;\n  height: 60vh;\n  max-width: 80vw;\n  max-height: 80vh;\n  background-image: url(https://image.flaticon.com/icons/svg/119/119596.svg);\n`;\n\n// Sun\nconst TopImage = styled(BaseCard)`\n  width: 150px;\n  height: 150px;\n  background-image: url(https://image.flaticon.com/icons/svg/789/789395.svg);\n`;\n\n// Cloud\nconst LeftImage = styled(BaseCard)`\n  opacity: 0.9;\n  width: 250px;\n  height: 250px;\n  background-image: url(https://image.flaticon.com/icons/svg/414/414927.svg);\n`;\n\n// Bird\nconst RightImage = styled(BaseCard)`\n  width: 100px;\n  height: 100px;\n  background-image: url(https://image.flaticon.com/icons/svg/789/789392.svg);\n`;\n\nconst AnimationContainer = styled.div`\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  \n  \n`;\nconst ComponentContainer = styled.div`\n  display: flex;\n  position: relative;\n  background: grey;\n  width: 80vw;\n  height: 80vh;\n\n  align-items: center;\n  justify-content: center;\n`;\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\nconst trans1 = (x, y) => `translate3d(${x / 100}px,${y / 100}px,0)`;\nconst trans2 = (x, y) => `translate3d(${x / 9 }px,${y / 9 - 180}px,0)`;\nconst trans3 = (x, y) => `translate3d(${x / 30 -240}px,${y / 60 - 150}px,0)`;\nconst trans4 = (x, y) => `translate3d(${x / 2 - 50}px,${y / 6 +50}px,0)`;\n\nconst ReactPage = () => {\n  const [props, set] = useSpring(() => ({\n    xy: [0, 0],\n    config: { mass: 10, tension: 550, friction: 140 },\n  }));\n\n  console.log(window.innerWidth);\n\n  return (\n    <ComponentContainer>\n      <AnimationContainer\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}\n      >\n        <BackImage style={{ transform: props.xy.interpolate(trans1) }} />\n        <TopImage style={{ transform: props.xy.interpolate(trans2) }} />\n        <LeftImage style={{ transform: props.xy.interpolate(trans3) }} />\n        <RightImage style={{ transform: props.xy.interpolate(trans4) }} />\n      </AnimationContainer>\n    </ComponentContainer>\n  );\n};\n\nexport default ReactPage;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Icons.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Constants/Colors.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/PrintPdf.js",["132","133","134","135"],"import React, { useEffect, useState } from \"react\";\nimport { Form, Col, Button } from \"react-bootstrap\";\nimport jsPDF from \"jspdf\";\nimport { DeterminePosition } from \"./Utility/MagicUtility\"\n\nconst jsPDFSettings = {\n  orientation: \"p\",\n  unit: \"mm\",\n  format: \"a4\",\n};\n\nconst PrintPdf = (props) => {\n\n\n  const generatePdf = () => {\n    const doc = new jsPDF(jsPDFSettings);\n\n    props.imageUris.map((item, index) => {\n      const { x, y } = DeterminePosition(index);\n\n      doc.addImage(item, \"JPEG\", x, y, 63, 88);\n\n      // Check if end of page && document\n      if (index % 9 === 8 && index !== props.imageUris.length - 1) {\n        doc.addPage(jsPDFSettings);\n      }\n    });\n\n    doc.save(\"proxies.pdf\");\n  };\n\n  console.log(props?.imageUris);\n\n  return (\n    <div>\n      <Button\n        variant=\"Secondary\"\n        onClick={generatePdf}\n        disabled={!props?.imageUris || props?.imageUris?.length < 1}\n      >\n        Print List\n      </Button>\n    </div>\n  );\n};\n\nexport default PrintPdf;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/CardDatabase.js",["136","137"],"import React, { useEffect, useState } from \"react\";\nimport { saveData } from \"../../Utilities/Json\";\nimport ScryfallData from \"../../Constants/ScryfallData.json\";\nimport { Button, Toast } from \"react-bootstrap\";\n\nconst parseDatabase = (setShowToast) => {\n  const fileName = \"ScryfallData.json\";\n\n  let cardDb = [];\n\n  ScryfallData.map((cardObject) => {\n    if (\n      (cardObject?.image_uris?.normal &&\n      cardObject.legalities.commander === \"legal\") || cardObject.imageUri\n    ) {\n      const newCardObject = {\n        name: cardObject.name,\n        // legal: cardObject.legalities.commander === 'legal',\n        imageUri: cardObject?.image_uris?.normal || cardObject?.imageUri,\n        // priceUsd: cardObject.prices.usd,\n      };\n      cardDb.push(newCardObject);\n    }\n  });\n\n  setShowToast(true)\n\n  saveData(cardDb, fileName);\n};\n\nconst CardDatabase = (props) => {\n  const [showToast, setShowToast] = useState(false);\n\n  useEffect(() => {}, []);\n\n  useEffect(() => {\n    console.log(\"On props change\");\n  }, [props]);\n\n  return (\n    <div>\n      {/* <Toast show={showToast} onClose={setShowToast}>\n        <Toast.Header>\n          <img src=\"holder.js/20x20?text=%20\" className=\"rounded mr-2\" alt=\"\" />\n          <strong className=\"mr-auto\">Card DB success</strong>\n          \n        </Toast.Header>\n        <Toast.Body>Woohoo!</Toast.Body>\n      </Toast> */}\n\n      <Button onClick={()=>{\n        parseDatabase(setShowToast);\n\n      }}>Click to parse scryfall data</Button>\n    </div>\n  );\n};\n\nexport default CardDatabase;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Utilities/Numbers.js",["138"],"const BUFFER = 50;\n\nconst generateRandomNumber = (from, to, fixedPlaces) =>\n  (Math.random() * (to - from) + from).toFixed(fixedPlaces) * 1;\n\nconst generateRandomCoordinates = (neighbouringCoords) => {\n  if (neighbouringCoords) {\n    return [\n      // Generates random longitude value\n      generateRandomNumber(\n        neighbouringCoords[0] - BUFFER,\n        neighbouringCoords[0] + BUFFER,\n        3\n      ),\n      // Generates random latitude value\n      generateRandomNumber(\n        neighbouringCoords[1] - BUFFER,\n        neighbouringCoords[1] + BUFFER,\n        3\n      ),\n    ];\n  }\n\n  return [generateRandomNumber(-180, 180, 3), generateRandomNumber(-90, 90, 3)];\n};\n\nexport const generateRandomDataSet = (numberRequired, initialViewport) => {\n  const output = [];\n\n  if (numberRequired > 0 && initialViewport) {\n    while (output.length < numberRequired) {\n      const lngLat = initialViewport.longitude\n        ? generateRandomCoordinates([\n            initialViewport.longitude,\n            initialViewport.latitude,\n          ])\n        : generateRandomCoordinates(initialViewport);\n\n      const newEntry = {\n        siteName: `Site # ${output.length + 1}`,\n        lngLat,\n        longitude: lngLat[0],\n        latitude: lngLat[1],\n        uniqueId: output.length + 1,\n      };\n\n      output.push(newEntry);\n    }\n  }\n\n  return output;\n};\n\n/**\n *\n * @param {the array of data which holds the array} data\n * @param {hook that sets state for data} setData\n * @param {index of the array item to be jumbled} index\n */\nexport const jumble = (data, setData, index) => {\n  let randomisedObject = [];\n  let randomisedIndexes = [];\n  const actualElement = data[index];\n  let actualData = data;\n  const actualElementLength = actualElement.length;\n\n  while (randomisedIndexes.length < actualElementLength) {\n    let randomInteger = Math.floor(Math.random() * actualElementLength);\n    if (randomisedIndexes.indexOf(randomInteger) === -1) {\n      randomisedIndexes.push(randomInteger);\n    }\n  }\n\n  console.log(randomisedIndexes);\n\n  randomisedIndexes.forEach((item, index) => {\n    randomisedObject.push(actualElement[item]);\n  });\n\n  console.log(randomisedObject);\n\n  actualData[index] = randomisedObject;\n  setData(actualData);\n};\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Utilities/Json.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Utility/MagicUtility.js",["139","140"],"const MARGIN_TOP = 10;\nconst MARGIN_LEFT = 10;\nconst CARD_WIDTH = 62;\nconst CARD_HEIGHT = 87;\nconst MARGIN_BETWEEN = 0;\n\n/**\n * Only 9 trading cards per A4 page\n */\nconst TOP_ROW = [1, 2, 3];\nconst MIDDLE_ROW = [4, 5, 6];\nconst BOTTOM_ROW = [7, 8, 9];\n\nconst LEFT_COL = [1, 4, 7];\nconst MIDDLE_COL = [2, 5, 8];\nconst RIGHT_COL = [3, 6, 9];\n\n/**\n * Determines where the next card img placement should be on A4 sheet\n * @param {*} index\n */\nexport const DeterminePosition = (index) => {\n  const position = index % 9 + 1;\n\n  let x = MARGIN_LEFT,\n    y = MARGIN_TOP;\n\n  if (MIDDLE_ROW.includes(position)) {\n    y = MARGIN_TOP + CARD_HEIGHT + MARGIN_BETWEEN;\n  }\n\n  if (BOTTOM_ROW.includes(position)) {\n    y = MARGIN_TOP + CARD_HEIGHT + MARGIN_BETWEEN + CARD_HEIGHT + MARGIN_BETWEEN;\n  }\n\n  if (MIDDLE_COL.includes(position)) {\n    x = MARGIN_LEFT + CARD_WIDTH + MARGIN_BETWEEN;\n  }\n\n  if (RIGHT_COL.includes(position)) {\n    x = MARGIN_LEFT + CARD_WIDTH + MARGIN_BETWEEN + CARD_WIDTH + MARGIN_BETWEEN;\n  }\n\n  return {\n    x,\n    y,\n  };\n};\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/Constants/Text.js",[],[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/CardListSorter.js",["141","142"],"import React, { useEffect, useState } from \"react\";\nimport { znrList, znrData } from \"./Znr\";\nimport { Button } from \"react-bootstrap\";\nimport { saveData } from \"../../Utilities/Json\";\nimport { jumble } from \"../../Utilities/Numbers\";\n\n/**\n * Application to help solve a math problem\n * @param {*} props\n */\nconst CardListSorter = (props) => {\n  const [pack, setPack] = useState([]);\n  const [table, setTable] = useState([]);\n  const [data, setData] = useState(znrData);\n  const [focus, setFocus] = useState();\n  const [showObject, setShowObject] = useState(false);\n\n  const generatePackElement = znrList.map((item, index) => (\n    <Button\n      onClick={() => setPack([...pack, item])}\n      disabled={pack.length > 2 || pack.includes(item)}\n      type=\"primary\"\n      key={index}\n      active={pack.includes(item)}\n    >\n      {item.name}\n    </Button>\n  ));\n\n  const dataPackElement = data.map((item, index) => (\n    <div key={index}>\n      {item.map((card, key) => (\n        <Button\n          key={key}\n          onClick={() => {\n            jumble(data, setData, index);\n            setFocus(card);\n          }}\n          active={focus?.name === card.name}\n        >\n          {card.name}\n        </Button>\n      ))}\n    </div>\n  ));\n\n  return (\n    <div>\n      {!showObject && <div>{generatePackElement}</div>}\n\n      {showObject && <div>{dataPackElement}</div>}\n\n      <Button\n        onClick={() => {\n          setTable([...table, pack]);\n          setPack([]);\n        }}\n      >\n        Submit pack\n      </Button>\n\n      <Button\n        onClick={() => {\n          setPack([]);\n        }}\n      >\n        Reset\n      </Button>\n\n      <Button\n        onClick={() => {\n          console.log(table);\n        }}\n      >\n        view table\n      </Button>\n\n      <Button\n        onClick={() => {\n          saveData(table);\n        }}\n      >\n        download table\n      </Button>\n\n      <Button\n        onClick={() => {\n          setShowObject(!showObject);\n        }}\n      >\n        {showObject ? \"view Card Add\" : \"view Data\"}\n      </Button>\n    </div>\n  );\n};\n\nexport default CardListSorter;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/ByteSized/VideoPage.js",["143","144","145","146","147","148"],"import React, { useState } from \"react\";\nimport video from './video.mp4';\nimport styled from \"styled-components\";\n\nconst VideoContainer = styled.div`\n  display: flex;\n  top: 0;\n  margin: 0px 50px;\n  max-height: 80vh;\n  max-width: 80vw;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n`;\n\nconst Video = styled.video`\n  position: fixed;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  \n`;\n\nconst getVideoSrc = width => {\n  // when versions of video are available\n  // https://medium.com/frontend-digest/responsive-and-progressive-video-loading-in-react-e8753315af51\n  // if (width >= 1080) return desktopVideo;\n  // if (width >= 720) return tabletVideo;\n  return video;\n};\n\nconst VideoPage = (props) => {\n  const [ users, setUsers ] = useState([]);\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  const src = getVideoSrc(window.innerWidth);\n  \n  return (\n    <VideoContainer>\n      <Video autoPlay playsInline muted loop src={src} />\n    </VideoContainer>\n  );\n};\n\nexport default VideoPage;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Home/NavBar1.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/MatchEntryPage.js",["149","150","151","152","153","154"],"import React, { useEffect, useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport {\n  DropdownButton,\n  Dropdown,\n  FormControl,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport { matchPlayers, playerNames, decks } from \"./Utility/MatchConstants\";\nimport RadioGroup from \"../RadioGroup\";\nimport { addToGoogleSheet } from \"../../Services/GoogleSheets\";\n\nconst Card = styled.div`\n  display: flex;\n  position: relative;\n  background: grey;\n  width: 80vw;\n  height: 80vh;\n\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CustomFormGroup = styled.div`\n  display: flex;\n`;\n\n/**\n * Component for entering data into a Google Sheets spreadsheet\n */\n\nconst MatchEntryPage = (props) => {\n  const [turns, setTurns] = useState(3);\n  const [matchData, setMatchData] = useState({\n    winner: matchPlayers[0],\n  });\n  const [showObject, setShowObject] = useState(false);\n\n  // useEffect(() => {\n  //   console.log('Component did mount')\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('On props change')\n  // }, [props]);\n\n  // console.log(matchData);\n\n  return (\n    <Card>\n      <Form>\n        {matchPlayers.map((player, index) => (\n          <Form.Group key={index} as={CustomFormGroup}>\n            <Form.Label>{player}</Form.Label>\n\n            <Typeahead\n              id=\"basic-typeahead-single\"\n              labelKey=\"name\"\n              onChange={(selection) =>\n                setMatchData({ ...matchData, [player]: selection[0] })\n              }\n              options={playerNames}\n              placeholder=\"Choose a player...\"\n              clearButton\n            />\n\n            <Typeahead\n              id=\"basic-typeahead-single\"\n              labelKey=\"name\"\n              onChange={(selection) => {\n                const deckLabel = \"Deck \" + (index + 1);\n                setMatchData({ ...matchData, [deckLabel]: selection[0] });\n                if (player === \"Player 4\") {\n                  setShowObject(true);\n                }\n              }}\n              options={decks}\n              placeholder=\"Choose a deck...\"\n              clearButton\n            />\n          </Form.Group>\n        ))}\n\n        {showObject && (\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <RadioGroup options={matchPlayers} title=\"Winner: \" />\n\n            <Form.Label>What turn did the game end? {turns}</Form.Label>\n            <Form.Control\n              type=\"range\"\n              defaultValue={turns}\n              onChange={(event) => setTurns(event.target.value)}\n              size=\"lg\"\n              min={1}\n              max={10}\n            />\n\n            <Form.Label>Match notes</Form.Label>\n            <Form.Control as=\"textarea\" rows={2} />\n          </Form.Group>\n        )}\n\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            console.log(matchData);\n            addToGoogleSheet();\n          }}\n        >\n          Submit\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default MatchEntryPage;\n","/Users/charleszhang/Documents/cxczau/portfolio/src/Components/Magic/Utility/MatchConstants.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Components/RadioGroup.js",[],"/Users/charleszhang/Documents/cxczau/portfolio/src/Services/GoogleSheets.js",["155"],{"ruleId":"156","severity":1,"message":"157","line":4,"column":17,"nodeType":"158","messageId":"159","endLine":4,"endColumn":22},{"ruleId":"156","severity":1,"message":"160","line":99,"column":34,"nodeType":"158","messageId":"159","endLine":99,"endColumn":39},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"162","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":16},{"ruleId":"156","severity":1,"message":"163","line":2,"column":18,"nodeType":"158","messageId":"159","endLine":2,"endColumn":29},{"ruleId":"156","severity":1,"message":"164","line":9,"column":3,"nodeType":"158","messageId":"159","endLine":9,"endColumn":9},{"ruleId":"156","severity":1,"message":"165","line":11,"column":3,"nodeType":"158","messageId":"159","endLine":11,"endColumn":11},{"ruleId":"156","severity":1,"message":"166","line":15,"column":10,"nodeType":"158","messageId":"159","endLine":15,"endColumn":15},{"ruleId":"156","severity":1,"message":"167","line":15,"column":17,"nodeType":"158","messageId":"159","endLine":15,"endColumn":30},{"ruleId":"156","severity":1,"message":"168","line":15,"column":32,"nodeType":"158","messageId":"159","endLine":15,"endColumn":44},{"ruleId":"156","severity":1,"message":"169","line":38,"column":7,"nodeType":"158","messageId":"159","endLine":38,"endColumn":11},{"ruleId":"156","severity":1,"message":"170","line":51,"column":7,"nodeType":"158","messageId":"159","endLine":51,"endColumn":17},{"ruleId":"156","severity":1,"message":"171","line":63,"column":7,"nodeType":"158","messageId":"159","endLine":63,"endColumn":26},{"ruleId":"156","severity":1,"message":"172","line":75,"column":7,"nodeType":"158","messageId":"159","endLine":75,"endColumn":17},{"ruleId":"156","severity":1,"message":"173","line":86,"column":10,"nodeType":"158","messageId":"159","endLine":86,"endColumn":15},{"ruleId":"156","severity":1,"message":"174","line":86,"column":17,"nodeType":"158","messageId":"159","endLine":86,"endColumn":25},{"ruleId":"156","severity":1,"message":"175","line":90,"column":17,"nodeType":"158","messageId":"159","endLine":90,"endColumn":24},{"ruleId":"156","severity":1,"message":"176","line":103,"column":9,"nodeType":"158","messageId":"159","endLine":103,"endColumn":20},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"177","line":3,"column":16,"nodeType":"158","messageId":"159","endLine":3,"endColumn":19},{"ruleId":"156","severity":1,"message":"178","line":5,"column":8,"nodeType":"158","messageId":"159","endLine":5,"endColumn":20},{"ruleId":"156","severity":1,"message":"179","line":21,"column":16,"nodeType":"158","messageId":"159","endLine":21,"endColumn":21},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"180","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"180","line":1,"column":28,"nodeType":"158","messageId":"159","endLine":1,"endColumn":36},{"ruleId":"156","severity":1,"message":"181","line":2,"column":10,"nodeType":"158","messageId":"159","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"177","line":2,"column":16,"nodeType":"158","messageId":"159","endLine":2,"endColumn":19},{"ruleId":"156","severity":1,"message":"182","line":4,"column":18,"nodeType":"158","messageId":"159","endLine":4,"endColumn":23},{"ruleId":"156","severity":1,"message":"183","line":32,"column":10,"nodeType":"158","messageId":"159","endLine":32,"endColumn":19},{"ruleId":"156","severity":1,"message":"160","line":76,"column":36,"nodeType":"158","messageId":"159","endLine":76,"endColumn":41},{"ruleId":"156","severity":1,"message":"184","line":10,"column":7,"nodeType":"158","messageId":"159","endLine":10,"endColumn":14},{"ruleId":"156","severity":1,"message":"185","line":14,"column":7,"nodeType":"158","messageId":"159","endLine":14,"endColumn":15},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"179","line":11,"column":25,"nodeType":"158","messageId":"159","endLine":11,"endColumn":30},{"ruleId":"156","severity":1,"message":"186","line":24,"column":21,"nodeType":"158","messageId":"159","endLine":24,"endColumn":26},{"ruleId":"156","severity":1,"message":"179","line":32,"column":20,"nodeType":"158","messageId":"159","endLine":32,"endColumn":25},{"ruleId":"156","severity":1,"message":"173","line":33,"column":11,"nodeType":"158","messageId":"159","endLine":33,"endColumn":16},{"ruleId":"156","severity":1,"message":"174","line":33,"column":18,"nodeType":"158","messageId":"159","endLine":33,"endColumn":26},{"ruleId":"156","severity":1,"message":"187","line":34,"column":10,"nodeType":"158","messageId":"159","endLine":34,"endColumn":23},{"ruleId":"156","severity":1,"message":"188","line":34,"column":25,"nodeType":"158","messageId":"159","endLine":34,"endColumn":41},{"ruleId":"156","severity":1,"message":"161","line":1,"column":17,"nodeType":"158","messageId":"159","endLine":1,"endColumn":26},{"ruleId":"156","severity":1,"message":"189","line":1,"column":38,"nodeType":"158","messageId":"159","endLine":1,"endColumn":46},{"ruleId":"156","severity":1,"message":"190","line":5,"column":3,"nodeType":"158","messageId":"159","endLine":5,"endColumn":17},{"ruleId":"156","severity":1,"message":"191","line":6,"column":3,"nodeType":"158","messageId":"159","endLine":6,"endColumn":11},{"ruleId":"156","severity":1,"message":"192","line":7,"column":3,"nodeType":"158","messageId":"159","endLine":7,"endColumn":14},{"ruleId":"156","severity":1,"message":"179","line":34,"column":25,"nodeType":"158","messageId":"159","endLine":34,"endColumn":30},{"ruleId":"156","severity":1,"message":"193","line":7,"column":34,"nodeType":"158","messageId":"159","endLine":7,"endColumn":38},"no-unused-vars","'Layer' is defined but never used.","Identifier","unusedVar","'index' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.","'CloseButton' is defined but never used.","'config' is defined but never used.","'useTrail' is defined but never used.","'grey3' is defined but never used.","'gradientColor' is defined but never used.","'gradientList' is defined but never used.","'Item' is assigned a value but never used.","'TrailsMain' is assigned a value but never used.","'TrailsTextContainer' is assigned a value but never used.","'TrailsText' is assigned a value but never used.","'users' is assigned a value but never used.","'setUsers' is assigned a value but never used.","'opacity' is assigned a value but never used.","'transitions' is assigned a value but never used.","'Col' is defined but never used.","'CardDatabase' is defined but never used.","'props' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Toast' is defined but never used.","'showToast' is assigned a value but never used.","'TOP_ROW' is assigned a value but never used.","'LEFT_COL' is assigned a value but never used.","'width' is defined but never used.","'isVideoLoaded' is assigned a value but never used.","'setIsVideoLoaded' is assigned a value but never used.","'Fragment' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'FormControl' is defined but never used.","'info' is defined but never used."]