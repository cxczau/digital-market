{"version":3,"sources":["Constants/Data.js","Components/Home/NavBar1.js","Constants/Colors.js","Components/Home/NavBar.js","Constants/Icons.js","Utilities/Numbers.js","Components/UrbicaMap.js","Components/ByteSized/ReactPage.js","Components/ByteSized/video.mp4","Components/ByteSized/VideoPage.js","Components/Magic/Utility/MatchConstants.js","Components/RadioGroup.js","Services/GoogleSheets.js","Components/Magic/MatchEntryPage.js","App.js","serviceWorker.js","index.js"],"names":["SectionEnum","Object","freeze","maps","mixpanel","react","aws","sectionData","title","section","name","description","css","height","magic","urbicaMapConfiguration","longitude","latitude","zoom","TrailsMain","styled","div","TrailsTextContainer","a","TrailsText","button","props","visible","Trail","open","children","items","React","Children","toArray","trail","useTrail","length","config","mass","tension","friction","opacity","y","from","x","map","index","rest","className","style","transform","interpolate","Container","NavButton","NavBar","navBarProps","useState","showObject","setShowObject","springRef","useRef","useSpring","ref","size","transRef","useTransition","item","unique","enter","leave","useChain","onClick","color","path","mdiMenu","width","setCurrentSection","mapIcon","Image","src","process","generateRandomNumber","to","fixedPlaces","Math","random","toFixed","generateRandomCoordinates","neighbouringCoords","generateRandomDataSet","numberRequired","initialViewport","output","lngLat","newEntry","siteName","uniqueId","push","Dialog","background","borderRadius","textAlign","ClusterMarker","pointCount","UrbicaReactHookMap","hoverSite","setHoverSite","mapPins","setMapPins","setVisible","configuration","viewport","setViewport","useEffect","mapStyle","accessToken","onViewportChange","closeButton","closeOnClick","radius","extent","nodeSize","component","onMouseEnter","onMouseLeave","BaseCard","animated","BackImage","TopImage","LeftImage","RightImage","AnimationContainer","ComponentContainer","calc","window","innerWidth","innerHeight","trans1","trans2","trans3","trans4","ReactPage","xy","set","console","log","onMouseMove","clientX","clientY","VideoContainer","Video","video","VideoPage","autoPlay","playsInline","muted","loop","matchPlayers","playerNames","decks","RadioGroup","active","setActive","Form","Group","Label","options","option","Check","type","id","label","checked","inline","readOnly","API_KEY","GOOGLE_API_KEY","Card","CustomFormGroup","MatchEntryPage","turns","setTurns","winner","matchData","setMatchData","player","as","labelKey","onChange","selection","placeholder","clearButton","deckLabel","controlId","Control","defaultValue","event","target","value","min","max","rows","Button","variant","info","uri","fetch","method","headers","Authorization","GOOGLE_ACCESS_KEY","key","body","JSON","stringify","requests","repeatCell","range","startColumnIndex","endColumnIndex","startRowIndex","endRowIndex","sheetId","cell","userEnteredValue","fields","addToGoogleSheet","HomePageContainer","App","currentSection","displayElement","Boolean","location","hostname","match","ReactDOM","render","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.45951993.chunk.js","sourcesContent":["export const SectionEnum = Object.freeze({\n  maps: 0,\n  mixpanel: 1,\n  react: 2,\n  aws: 3,\n});\n\nexport const sectionData = [\n  {\n    title: \"Mapbox\",\n    section: SectionEnum.maps,\n    name: \"Rare Wind\",\n    description: \"#a8edea → #fed6e3\",\n    css: \"linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)\",\n    height: 200,\n  },\n  {\n    title: \"Mixpanel\",\n    section: SectionEnum.mixpanel,\n    name: \"Saint Petersburg\",\n    description: \"#f5f7fa → #c3cfe2\",\n    css: \"linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)\",\n    height: 400,\n  },\n  {\n    title: \"React\",\n    section: SectionEnum.react,\n    name: \"Deep Blue\",\n    description: \"#e0c3fc → #8ec5fc\",\n    css: \"linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)\",\n    height: 400,\n  },\n  {\n    title: \"AWS\",\n    section: SectionEnum.aws,\n    name: \"Ripe Malinka\",\n    description: \"#f093fb → #f5576c\",\n    css: \"linear-gradient(135deg, #f093fb 0%, #f5576c 100%)\",\n    height: 400,\n  },\n  // {\n  //   title: \"Typescript\",\n  //   description: \"\",\n  //   section: SectionEnum.react,\n  // },\n  {\n    title: \"Contact\",\n    section: SectionEnum.magic,\n    name: \"Near Moon\",\n    description: \"#5ee7df → #b490ca\",\n    css: \"linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)\",\n    height: 400,\n  },\n];\n\nexport const mapConfiguration = {\n  lngLat: [147.19554, -31.5632],\n  zoom: [10],\n};\n\nexport const urbicaMapConfiguration = {\n  longitude: 147.19554,\n  latitude: -31.5632,\n  zoom: 10,\n};\n","import React, { useState } from \"react\";\nimport Icon from \"@mdi/react\";\nimport styled from \"styled-components\";\nimport { a, useTrail } from \"react-spring\";\nimport { mdiMenu } from \"@mdi/js\";\nimport { sectionData } from \"../../Constants/Data\";\nimport { grey3 } from \"../../Constants/Colors\";\n\nconst TrailsMain = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsTextContainer = styled(a.div)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsText = styled(a.div)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  color: black;\n  font-size: 4em;\n  font-weight: 800;\n  letter-spacing: -6px;\n  will-change: transform, opacity;\n  overflow: hidden;\n`;\n\nconst NavButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: calc(50vh);\n`;\n\nconst Overlay = styled.div`\n  ${(props) => (props.visible ? \"\" : \"display: none\")};\n  position: absolute;\n  left: 0;\n  top: 0;\n  z-index: 98;\n  margin: 5vw;\n  width: 90vw;\n  height: 90vh;\n  background: ${grey3};\n`;\n\nexport function Trail({ open, children, ...props }) {\n  const items = React.Children.toArray(children);\n  const trail = useTrail(items.length, {\n    config: { mass: 5, tension: 2000, friction: 200 },\n    opacity: open ? 1 : 0,\n    y: open ? 0 : 20,\n    height: open ? 110 : 0,\n    from: { opacity: 0, x: 20, height: 0 },\n  });\n  return (\n    <TrailsMain {...props}>\n      <div>\n        {trail.map(({ x, height, ...rest }, index) => (\n          <TrailsTextContainer\n            key={items[index]}\n            className=\"trails-text\"\n            style={{\n              ...rest,\n              transform: x.interpolate((x) => `translate3d(0,${x}px,0)`),\n            }}\n          >\n            <TrailsText style={{ height }}>{items[index]}</TrailsText>\n          </TrailsTextContainer>\n        ))}\n      </div>\n    </TrailsMain>\n  );\n}\n\n/**\n * Regular NavBar with trails animation for section spans\n * @param  navBarProps \n */\nconst NavBar = (navBarProps) => {\n  const [showObject, setShowObject] = useState(true);\n\n  return (\n    <div>\n      <NavButton onClick={() => setShowObject(!showObject)}>\n        <Icon color=\"blue\" path={mdiMenu} size=\"40px\" />\n      </NavButton>\n\n      <Overlay visible={showObject}>\n        <Trail open={showObject}>\n          {sectionData.map((item, index) => (\n            <span\n              key={index}\n              onClick={() => {\n                setShowObject(false);\n                navBarProps.setCurrentSection(item.section);\n              }}\n            >\n              {item.title}\n            </span>\n          ))}\n        </Trail>\n      </Overlay>\n    </div>\n  );\n};\n\nexport default NavBar;\n","export const blue1 = '#68829B';\nexport const blue2 = '#576D82';\nexport const blue3 = '#465768';\n\nexport const grey1 = '#EBEDEF';\nexport const grey2 = '#AEB6BF';\nexport const grey3 = '#85929E';\nexport const grey4 = '#5D6D7E';\nexport const grey5 = '#34495E';\nexport const grey6 = '#2E4053';\n\nexport const gradientColor = (id) => {\n  if (typeof id === 'string') {\n    return gradientList.find(name).css;\n  }\n  return gradientList[id];\n}\n\n// Gradients taken from: https://webgradients.com/\nexport const gradientList =  [\n  {\n    name: 'Rare Wind',\n    description: '#a8edea → #fed6e3',\n    css: 'linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)',\n    height: 200\n  },\n  {\n    name: 'Saint Petersburg',\n    description: '#f5f7fa → #c3cfe2',\n    css: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n    height: 400\n  },\n  {\n    name: 'Deep Blue',\n    description: '#e0c3fc → #8ec5fc',\n    css: 'linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)',\n    height: 400\n  },\n  {\n    name: 'Ripe Malinka',\n    description: '#f093fb → #f5576c',\n    css: 'linear-gradient(135deg, #f093fb 0%, #f5576c 100%)',\n    height: 400\n  },\n  {\n    name: 'Perfect White',\n    description: '#fdfbfb → #ebedee',\n    css: 'linear-gradient(135deg, #E3FDF5 0%, #FFE6FA 100%)',\n    height: 400\n  },\n  {\n    name: 'Near Moon',\n    description: '#5ee7df → #b490ca',\n    css: 'linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)',\n    height: 400\n  },\n  {\n    name: 'Wild Apple',\n    description: '#d299c2 → #fef9d7',\n    css: 'linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)',\n    height: 200\n  },\n  {\n    name: 'Ladoga Bottom',\n    description: '#ebc0fd → #d9ded8',\n    css: 'linear-gradient(135deg, #ebc0fd 0%, #d9ded8 100%)',\n    height: 400\n  },\n  {\n    name: 'Sunny Morning',\n    description: '#f6d365 → #fda085',\n    css: 'linear-gradient(135deg, #f6d365 0%, #fda085 100%)',\n    height: 200\n  },\n  {\n    name: 'Lemon Gate',\n    description: '#96fbc4 → #f9f586',\n    css: 'linear-gradient(135deg, #96fbc4 0%, #f9f586 100%)',\n    height: 400\n  },\n  {\n    name: 'Salt Mountain',\n    description: ' #FFFEFF → #D7FFFE',\n    css: 'linear-gradient(135deg, #FFFEFF 0%, #D7FFFE 100%)',\n    height: 200\n  },\n  {\n    name: 'New York',\n    description: ' #fff1eb → #ace0f9',\n    css: 'linear-gradient(135deg, #fff1eb 0%, #ace0f9 100%)',\n    height: 400\n  },\n  {\n    name: 'Soft Grass',\n    description: ' #c1dfc4 → #deecdd',\n    css: 'linear-gradient(135deg, #c1dfc4 0%, #deecdd 100%)',\n    height: 400\n  },\n  {\n    name: 'Japan Blush',\n    description: ' #ddd6f3 → #faaca8',\n    css: 'linear-gradient(135deg, #ddd6f3 0%, #faaca8 100%, #faaca8 100%)',\n    height: 200\n  }\n]\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Button, CloseButton } from \"react-bootstrap\";\nimport Icon from \"@mdi/react\";\nimport styled from \"styled-components\";\nimport {\n  useTransition,\n  useSpring,\n  useChain,\n  config,\n  a,\n  useTrail,\n} from \"react-spring\";\nimport { mdiMenu } from \"@mdi/js\";\nimport { sectionData } from \"../../Constants/Data\";\nimport { grey3, gradientColor, gradientList } from \"../../Constants/Colors\";\nimport { Trail } from \"./NavBar1\";\n\nconst Container = styled(a.div)`\n  ${(props) => (props.visible ? \"\" : \"display: none\")};\n  background: white;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 90vw;\n  height: 90vh;\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.05);\n  will-change: width, height;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  margin: 5vh 5vw;\n  z-index: 98;\n  background: linear-gradient(to top, white 20%, rgba(255, 255, 255, 0) 100%);\n`;\n\nconst Item = styled(a.div)`\n  width: 100%;\n  height: 100%;\n  color: black;\n  border-radius: 5px;\n  will-change: transform, opacity;\n`;\n\n// const AnimatedContainer = styled(a.div)`\n// position: absolute;\n//   will-change: transform, opacity;\n// `;\n\nconst TrailsMain = styled.div`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsTextContainer = styled(a.div)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 99;\n`;\n\nconst TrailsText = styled(a.div)`\n  overflow: hidden;\n`;\n\nconst NavButton = styled.button`\n  position: fixed;\n  left: 0;\n  top: calc(50vh);\n`;\n\nconst NavBar = (navBarProps) => {\n  const [users, setUsers] = useState([]);\n  const [showObject, setShowObject] = useState(false);\n\n  const springRef = useRef();\n  const { size, opacity, ...rest } = useSpring(\n    {\n      ref: springRef,\n      config: { mass: 5, tension: 2000, friction: 200 },\n      opacity: open ? 1 : 0,\n      y: open ? 0 : 200,\n      height: open ? 110 : 0,\n      from: { opacity: 0, x: 20, height: 0 },\n    }\n    \n  );\n\n  const transRef = useRef();\n  const transitions = useTransition(\n    showObject ? sectionData : [],\n    (item) => item.name,\n    {\n      ref: transRef,\n      unique: true,\n      trail: 400 / sectionData.length,\n      from: { opacity: 0, transform: \"scale(0)\" },\n      enter: { opacity: 1, transform: \"scale(1)\" },\n      leave: { opacity: 0, transform: \"scale(0)\" },\n    }\n  );\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(showObject ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    showObject ? 0.1 : 0.6,\n  ]);\n\n  return (\n    <div>\n      <NavButton onClick={() => setShowObject(!showObject)}>\n        <Icon color=\"blue\" path={mdiMenu} size=\"40px\" />\n      </NavButton>\n\n      {/* <AnimatedContainer> */}\n        <Container\n          style={{ ...rest, width: size, height: size }}\n          visible={showObject}\n          onClick={() => setShowObject(!showObject)}\n        >\n          {/* {transitions.map(({ item, key, props }) => (\n          <Item key={key} style={{ ...props, background: item.css }}>\n            <span\n              onClick={() => {\n                setShowObject(false);\n                navBarProps.setCurrentSection(item.section);\n              }}\n            >\n              {item.title}\n            </span>\n          </Item>\n        ))} */}\n\n          <Trail open={showObject}>\n            {sectionData.map((item, index) => (\n              <span\n                key={index}\n                onClick={() => {\n                  setShowObject(false);\n                  navBarProps.setCurrentSection(item.section);\n                }}\n              >\n                {item.title}\n              </span>\n            ))}\n          </Trail>\n        </Container>\n      {/* </AnimatedContainer> */}\n    </div>\n  );\n};\n\nexport default NavBar;\n","\nexport const basepath = process.env.PUBLIC_URL;\n// export const logo = basepath + LOGO;\n// export const helpIcon = basepath + HELP_ICON;\n// export const closeIcon = basepath + CLOSE_ICON;\n// export const editIcon = `${basepath}/images/icons/edit.svg`;\n// export const deleteIcon = `${basepath}/images/icons/delete.svg`;\n\nexport const mapIcon = new Image(15, 22.5);\nmapIcon.src = `${basepath}/images/icons/droplet_purple.svg`;\nexport const siteAuditMarkers = [\"mapIcon\", mapIcon];\n\n// const bullseye = new Image(100, 100);\n// bullseye.src = `${basepath}/images/icons/bullseye.svg`;\n// export const bullseyeIcon = [\"bullseye\", bullseye];\n\n// const iconA = new Image(15, 22.5);\n// iconA.src = `${basepath}/images/icons/droplet_darkblue.svg`;\n// const mapIconA = [\"iconA\", iconA];\n\n// const iconB = new Image(15, 22.5);\n// iconB.src = `${basepath}/images/icons/droplet_green.svg`;\n// const mapIconB = [\"iconB\", iconB];\n\n// const iconC = new Image(15, 22.5);\n// iconC.src = `${basepath}/images/icons/droplet_lightblue.svg`;\n// const mapIconC = [\"iconC\", iconC];\n\n// const iconD = new Image(15, 22.5);\n// iconD.src = `${basepath}/images/icons/droplet_orange.svg`;\n// const mapIconD = [\"iconD\", iconD];\n\n// const iconE = new Image(15, 22.5);\n// iconE.src = `${basepath}/images/icons/droplet_pink.svg`;\n// const mapIconE = [\"iconE\", iconE];\n\n// export const filterLayerIcons = [\n//     mapIconA,\n//     mapIconB,\n//     mapIconC,\n//     mapIconD,\n//     mapIconE,\n// ]\n","const BUFFER = 50;\n\nconst generateRandomNumber = (from, to, fixedPlaces) =>\n  (Math.random() * (to - from) + from).toFixed(fixedPlaces) * 1;\n\nconst generateRandomCoordinates = (neighbouringCoords) => {\n  if (neighbouringCoords) {\n    return [\n      // Generates random longitude value\n      generateRandomNumber(\n        neighbouringCoords[0] - BUFFER,\n        neighbouringCoords[0] + BUFFER,\n        3\n      ),\n      // Generates random latitude value\n      generateRandomNumber(\n        neighbouringCoords[1] - BUFFER,\n        neighbouringCoords[1] + BUFFER,\n        3\n      ),\n    ];\n  }\n\n  return [generateRandomNumber(-180, 180, 3), generateRandomNumber(-90, 90, 3)];\n};\n\nexport const generateRandomDataSet = (numberRequired, initialViewport) => {\n  const output = [];\n\n  if (numberRequired > 0 && initialViewport) {\n    while (output.length < numberRequired) {\n      const lngLat = initialViewport.longitude\n        ? generateRandomCoordinates([\n            initialViewport.longitude,\n            initialViewport.latitude,\n          ])\n        : generateRandomCoordinates(initialViewport);\n\n      const newEntry = {\n        siteName: `Site # ${output.length + 1}`,\n        lngLat,\n        longitude: lngLat[0],\n        latitude: lngLat[1],\n        uniqueId: output.length + 1,\n      };\n\n      output.push(newEntry);\n    }\n  }\n\n  return output;\n};\n\n/**\n *\n * @param {the array of data which holds the array} data\n * @param {hook that sets state for data} setData\n * @param {index of the array item to be jumbled} index\n */\nexport const jumble = (data, setData, index) => {\n  let randomisedObject = [];\n  let randomisedIndexes = [];\n  const actualElement = data[index];\n  let actualData = data;\n  const actualElementLength = actualElement.length;\n\n  while (randomisedIndexes.length < actualElementLength) {\n    let randomInteger = Math.floor(Math.random() * actualElementLength);\n    if (randomisedIndexes.indexOf(randomInteger) === -1) {\n      randomisedIndexes.push(randomInteger);\n    }\n  }\n\n  console.log(randomisedIndexes);\n\n  randomisedIndexes.forEach((item, index) => {\n    randomisedObject.push(actualElement[item]);\n  });\n\n  console.log(randomisedObject);\n\n  actualData[index] = randomisedObject;\n  setData(actualData);\n};\n","import React, { useState, useEffect } from \"react\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport styled from \"styled-components\";\nimport MapGL, { Layer, Marker, Popup } from \"@urbica/react-map-gl\";\nimport Cluster from \"@urbica/react-map-gl-cluster\";\nimport { mapIcon } from \"../Constants/Icons\";\nimport { generateRandomDataSet } from \"../Utilities/Numbers\";\nimport { blue1 } from \"../Constants/Colors\";\n\nconst NUMBER_OF_DATA_POINTS = 500;\n\nconst Dialog = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 8px;\n  max-height: 30vh;\n  max-width: 30vh;\n  background: ${blue1};\n`;\n\nconst style = {\n  width: \"20px\",\n  height: \"20px\",\n  color: \"#fff\",\n  background: \"#1978c8\",\n  borderRadius: \"20px\",\n  textAlign: \"center\",\n};\n\nconst ClusterMarker = ({ longitude, latitude, pointCount }) => (\n  <Marker longitude={longitude} latitude={latitude}>\n    <div style={{ ...style, background: \"#f28a25\" }}>{pointCount}</div>\n  </Marker>\n);\n\nconst UrbicaReactHookMap = (props) => {\n  const [hoverSite, setHoverSite] = useState();\n  const [mapPins, setMapPins] = useState([]);\n  const [visible, setVisible] = useState(false);\n\n  const [viewport, setViewport] = useState(props.configuration);\n\n  useEffect(() => {\n    setMapPins(generateRandomDataSet(NUMBER_OF_DATA_POINTS, viewport));\n  }, []);\n\n  // console.log(props);\n\n  return (\n    <div>\n      <button onClick={() => setVisible(!visible)}>\n        {visible ? \"Hide\" : \"Show\"}\n      </button>\n\n      <button\n        onClick={() =>\n          setMapPins(generateRandomDataSet(NUMBER_OF_DATA_POINTS, viewport))\n        }\n      >\n        Generate new data points\n      </button>\n\n      <MapGL\n        style={{ width: \"80vw\", height: \"80vh\" }}\n        mapStyle=\"mapbox://styles/cxczau/ckjmnzi6321ze19o2to7b49im\"\n        accessToken={process.env.REACT_APP_MAPBOX_TOKEN}\n        {...viewport}\n        onViewportChange={setViewport}\n      >\n        {!!hoverSite && !!hoverSite.siteName && (\n          <Popup\n            longitude={hoverSite.longitude}\n            latitude={hoverSite.latitude}\n            closeButton={false}\n            closeOnClick={false}\n            style={{\n              color: \"black\",\n            }}\n          >\n            <Dialog>\n              <div>{hoverSite.siteName}</div>\n\n              <div>{hoverSite.lngLat}</div>\n\n              <div>Click to view full site details</div>\n            </Dialog>\n          </Popup>\n        )}\n\n        {visible && (\n          <Cluster\n            // ref={clusterRef}\n            radius={40}\n            extent={512}\n            nodeSize={64}\n            component={ClusterMarker}\n          >\n            {mapPins.length > 0 &&\n              mapPins.map((item, index) => (\n                <Marker\n                  key={item.uniqueId}\n                  longitude={item.lngLat[0]}\n                  latitude={item.lngLat[1]}\n                >\n                  <div\n                    // onClick={() => setCurrentSite(item)}\n                    onMouseEnter={() => setHoverSite(item)}\n                    onMouseLeave={() => setHoverSite(null)}\n                  >\n                    <img src={mapIcon.src} />\n                  </div>\n                </Marker>\n              ))}\n          </Cluster>\n        )}\n      </MapGL>\n    </div>\n  );\n};\n\nexport default UrbicaReactHookMap;\n","import React, { useEffect, useState } from \"react\";\nimport { useSpring, animated } from \"react-spring\";\nimport styled from \"styled-components\";\n\nconst BaseCard = styled(animated.div)`\n  position: absolute;\n  border-radius: 5px;\n\n  background-position: center center;\n  background-repeat: no-repeat;\n  will-change: transform;\n`;\n\nconst BackImage = styled(BaseCard)`\n  width: 60vw;\n  height: 60vh;\n  max-width: 80vw;\n  max-height: 80vh;\n  background-image: url(https://image.flaticon.com/icons/svg/119/119596.svg);\n`;\n\n// Sun\nconst TopImage = styled(BaseCard)`\n  width: 150px;\n  height: 150px;\n  background-image: url(https://image.flaticon.com/icons/svg/789/789395.svg);\n`;\n\n// Cloud\nconst LeftImage = styled(BaseCard)`\n  opacity: 0.9;\n  width: 250px;\n  height: 250px;\n  background-image: url(https://image.flaticon.com/icons/svg/414/414927.svg);\n`;\n\n// Bird\nconst RightImage = styled(BaseCard)`\n  width: 100px;\n  height: 100px;\n  background-image: url(https://image.flaticon.com/icons/svg/789/789392.svg);\n`;\n\nconst AnimationContainer = styled.div`\n  display: flex;\n  \n  align-items: center;\n  justify-content: center;\n  \n  \n`;\nconst ComponentContainer = styled.div`\n  display: flex;\n  position: relative;\n  background: grey;\n  width: 80vw;\n  height: 80vh;\n\n  align-items: center;\n  justify-content: center;\n`;\n\nconst calc = (x, y) => [x - window.innerWidth / 2, y - window.innerHeight / 2];\nconst trans1 = (x, y) => `translate3d(${x / 100}px,${y / 100}px,0)`;\nconst trans2 = (x, y) => `translate3d(${x / 9 }px,${y / 9 - 180}px,0)`;\nconst trans3 = (x, y) => `translate3d(${x / 30 -240}px,${y / 60 - 150}px,0)`;\nconst trans4 = (x, y) => `translate3d(${x / 2 - 50}px,${y / 6 +50}px,0)`;\n\nconst ReactPage = () => {\n  const [props, set] = useSpring(() => ({\n    xy: [0, 0],\n    config: { mass: 10, tension: 550, friction: 140 },\n  }));\n\n  console.log(window.innerWidth);\n\n  return (\n    <ComponentContainer>\n      <AnimationContainer\n        onMouseMove={({ clientX: x, clientY: y }) => set({ xy: calc(x, y) })}\n      >\n        <BackImage style={{ transform: props.xy.interpolate(trans1) }} />\n        <TopImage style={{ transform: props.xy.interpolate(trans2) }} />\n        <LeftImage style={{ transform: props.xy.interpolate(trans3) }} />\n        <RightImage style={{ transform: props.xy.interpolate(trans4) }} />\n      </AnimationContainer>\n    </ComponentContainer>\n  );\n};\n\nexport default ReactPage;\n","export default __webpack_public_path__ + \"static/media/video.be242b95.mp4\";","import React, { useState } from \"react\";\nimport video from './video.mp4';\nimport styled from \"styled-components\";\n\nconst VideoContainer = styled.div`\n  display: flex;\n  top: 0;\n  margin: 0px 50px;\n  max-height: 80vh;\n  max-width: 80vw;\n  align-items: center;\n  justify-content: center;\n  pointer-events: none;\n`;\n\nconst Video = styled.video`\n  position: fixed;\n  z-index: 2;\n  width: 100%;\n  height: 100%;\n  \n`;\n\nconst getVideoSrc = width => {\n  // when versions of video are available\n  // https://medium.com/frontend-digest/responsive-and-progressive-video-loading-in-react-e8753315af51\n  // if (width >= 1080) return desktopVideo;\n  // if (width >= 720) return tabletVideo;\n  return video;\n};\n\nconst VideoPage = (props) => {\n  const [ users, setUsers ] = useState([]);\n  const [isVideoLoaded, setIsVideoLoaded] = React.useState(false);\n\n  const src = getVideoSrc(window.innerWidth);\n  \n  return (\n    <VideoContainer>\n      <Video autoPlay playsInline muted loop src={src} />\n    </VideoContainer>\n  );\n};\n\nexport default VideoPage;\n","export const matchPlayers = [\n  'Player 1',\n  'Player 2',\n  'Player 3',\n  'Player 4',\n]\n\nexport const playerNames = [\n  \"Charles\",\n  \"Jake\",\n  \"Alex\",\n  \"Phil\",\n  \"Brendan\",\n  \"Tom\",\n  \"Robyn\",\n  \"John\",\n  \"Declan\",\n  \"Galen\",\n];\n\nexport const decks = [\n  \"Kraum & Tymna\",\n  \"Kraum & Ikra\",\n  \"Gitrog\",\n  \"Kenrith\",\n  \"Magda\",\n  \"Koll\",\n  \"Rograkh & Silas\",\n  \"Kaalia of the Vast\",\n  \"Yuriko\",\n  \"Thrasios & Vial Smasher\",\n  \"Kess\",\n  \"Thrasios & Tymna\",\n  \"Anje\",\n  \"Najeela\",\n  \"Nath\",\n  \"Rashmi\",\n  \"Kinnan\",\n  \"Tymna & Sakashima\",\n  `K'rrik`,\n  \"Pako & Haldan\",\n  \"Tymna & Tana\",\n  \"Winota\",\n  \"Godo\",\n  \"Selvala\",\n  \"Ruric Thar\",\n  \"Samut\",\n  \"Inalla\",\n  \"Thrasios & Akiri\",\n  \"Golos\",\n  \"Jeska & Tymna\",\n  \"Derevi\",\n];\n","import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\n/**\n * Simple radio group using React-Bootstrap\n * @param {*} options: options to be rendered in the group\n * @param {*} title: title for the component\n */\nconst RadioGroup = (props) => {\n  const [active, setActive] = useState(0);\n\n  return (\n    <Form.Group>\n      <Form.Label>{props?.title}</Form.Label>\n\n      {props.options.map((option, index) => (\n        <Form.Check\n          type=\"radio\"\n          id={`custom-inline-radio-${index}`}\n          label={option}\n          onClick={() => setActive(index)}\n          key={index}\n          checked={active === index}\n          inline\n          readOnly\n        />\n      ))}\n    </Form.Group>\n  );\n};\n\nexport default RadioGroup;\n","const SPREADSHEET_ID = \"1MPHhQUKeJLTmrKnChrTT2rydHNNw4F-YF8NOMmHt4WI\";\n// const SPREADSHEET_ID = \"1c2hhDbPHtNKbL6WmUp3_JAPgpoftMI_HEgesiFhpjlo\";\n\n// eslint-disable-next-line no-undef\nconst API_KEY = process.env.GOOGLE_API_KEY;\n\nexport const addToGoogleSheet = (info) => {\n  const uri = `https://sheets.googleapis.com/v4/spreadsheets/${SPREADSHEET_ID}/batchUpdate`;\n  // const body = {\n  //   \"range\": \"Sheet1!A1:D5\",\n  //   \"majorDimension\": \"ROWS\",\n  //   \"values\": [\n  //     [\"Item\", \"Cost\", \"Stocked\", \"Ship Date\"],\n  //     [\"Wheel\", \"$20.50\", \"4\", \"3/1/2016\"],\n  //     [\"Door\", \"$15\", \"2\", \"3/15/2016\"],\n  //     [\"Engine\", \"$100\", \"1\", \"3/20/2016\"],\n  //     [\"Totals\", \"=SUM(B2:B4)\", \"=SUM(C2:C4)\", \"=MAX(D2:D4)\"]\n  //   ],\n  // };\n\n  const body = {\n    requests: [{\n      repeatCell: {\n        range: {\n          startColumnIndex: 0,\n          endColumnIndex: 1,\n          startRowIndex: 0,\n          endRowIndex: 1,\n          sheetId: 0\n        },\n        cell: {\n          userEnteredValue: {\n            \"numberValue\": 10\n          },\n        },\n        fields: \"*\"\n      }\n    }]\n  }\n\n  return fetch(`${uri}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      //update this token with yours. \n      Authorization: `Bearer ${process.env.GOOGLE_ACCESS_KEY}`,\n      key: API_KEY,\n    },\n    body: JSON.stringify(body),\n  })\n    // .then((response) => {\n    //   return response.json();\n    // })\n    // .then((appData) => {\n    //   return appData;\n    // });\n};\n","import React, { useEffect, useState, Fragment } from \"react\";\nimport styled from \"styled-components\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport {\n  DropdownButton,\n  Dropdown,\n  FormControl,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport { matchPlayers, playerNames, decks } from \"./Utility/MatchConstants\";\nimport RadioGroup from \"../RadioGroup\";\nimport { addToGoogleSheet } from \"../../Services/GoogleSheets\";\n\nconst Card = styled.div`\n  display: flex;\n  position: relative;\n  background: grey;\n  width: 80vw;\n  height: 80vh;\n\n  align-items: center;\n  justify-content: center;\n`;\n\nconst CustomFormGroup = styled.div`\n  display: flex;\n`;\n\n/**\n * Component for entering data into a Google Sheets spreadsheet\n */\n\nconst MatchEntryPage = (props) => {\n  const [turns, setTurns] = useState(3);\n  const [matchData, setMatchData] = useState({\n    winner: matchPlayers[0],\n  });\n  const [showObject, setShowObject] = useState(false);\n\n  // useEffect(() => {\n  //   console.log('Component did mount')\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log('On props change')\n  // }, [props]);\n\n  // console.log(matchData);\n\n  return (\n    <Card>\n      <Form>\n        {matchPlayers.map((player, index) => (\n          <Form.Group key={index} as={CustomFormGroup}>\n            <Form.Label>{player}</Form.Label>\n\n            <Typeahead\n              id=\"basic-typeahead-single\"\n              labelKey=\"name\"\n              onChange={(selection) =>\n                setMatchData({ ...matchData, [player]: selection[0] })\n              }\n              options={playerNames}\n              placeholder=\"Choose a player...\"\n              clearButton\n            />\n\n            <Typeahead\n              id=\"basic-typeahead-single\"\n              labelKey=\"name\"\n              onChange={(selection) => {\n                const deckLabel = \"Deck \" + (index + 1);\n                setMatchData({ ...matchData, [deckLabel]: selection[0] });\n                if (player === \"Player 4\") {\n                  setShowObject(true);\n                }\n              }}\n              options={decks}\n              placeholder=\"Choose a deck...\"\n              clearButton\n            />\n          </Form.Group>\n        ))}\n\n        {showObject && (\n          <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n            <RadioGroup options={matchPlayers} title=\"Winner: \" />\n\n            <Form.Label>What turn did the game end? {turns}</Form.Label>\n            <Form.Control\n              type=\"range\"\n              defaultValue={turns}\n              onChange={(event) => setTurns(event.target.value)}\n              size=\"lg\"\n              min={1}\n              max={10}\n            />\n\n            <Form.Label>Match notes</Form.Label>\n            <Form.Control as=\"textarea\" rows={2} />\n          </Form.Group>\n        )}\n\n        <Button\n          variant=\"primary\"\n          onClick={() => {\n            console.log(matchData);\n            addToGoogleSheet();\n          }}\n        >\n          Submit\n        </Button>\n      </Form>\n    </Card>\n  );\n};\n\nexport default MatchEntryPage;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport NavBar from \"./Components/Home/NavBar\";\nimport UrbicaReactHookMap from \"./Components/UrbicaMap\";\nimport ReactPage from \"./Components/ByteSized/ReactPage\";\nimport VideoPage from \"./Components/ByteSized/VideoPage\";\nimport { urbicaMapConfiguration, SectionEnum } from \"./Constants/Data\";\n// import Magic from \"./Components/Magic/Index\";\n// import CardListSorter from \"./Components/Magic/CardListSorter\";\nimport MatchEntryPage from \"./Components/Magic/MatchEntryPage\";\n\nconst HomePageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background-color: #282c34;\n  min-height: 100vh;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nfunction App() {\n  const [currentSection, setCurrentSection] = useState(SectionEnum.aws);\n\n  let displayElement = <div />;\n\n  switch (currentSection) {\n    case SectionEnum.maps:\n      displayElement = (\n        <UrbicaReactHookMap configuration={urbicaMapConfiguration} />\n      );\n      break;\n    case SectionEnum.react:\n      displayElement = (\n        <ReactPage />\n        // <VideoPage />\n      );\n      break;\n    case SectionEnum.aws:\n      displayElement = <MatchEntryPage />;\n      // displayElement = <Magic />;\n      // displayElement = <CardListSorter />;\n      break;\n    case SectionEnum.magic:\n      displayElement = <VideoPage />;\n      // displayElement = <Magic />;\n      // displayElement = <CardListSorter />;\n      break;\n    default:\n      displayElement = <div>Error</div>;\n      break;\n  }\n\n  return (\n    <div className=\"App\">\n      <HomePageContainer>\n        <NavBar setCurrentSection={setCurrentSection} />\n\n        {displayElement}\n      </HomePageContainer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router basename={process.env.PUBLIC_URL}>< App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}